# {{ ansible_managed | comment(decoration="# ") }}
---
version: "2.4"

networks:
  default:
  proxy:
    external: true

services:
  traefik:
    image: traefik:3.0
    restart: unless-stopped
    container_name: traefik
    command:
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.network=proxy"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.cloudflare-tunnel.address=:8000"
      - "--entryPoints.cloudflare-tunnel.forwardedHeaders.insecure=true"
      - "--entrypoints.http.address=:80/tcp"
      - "--entryPoints.http.forwardedHeaders.insecure=true"
      - "--entrypoints.https.address=:443/tcp"
      - "--entrypoints.https.http.tls=true"
      - "--entrypoints.https.http.tls.certresolver=adventurousway-cloudflare"
      - "--certificatesresolvers.adventurousway-cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.adventurousway-cloudflare.acme.dnschallenge.provider=cloudflare"
      # - "--certificatesresolvers.adventurousway-cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.adventurousway-cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.adventurousway-cloudflare.acme.email={{ letsencrypt_email_address }}"
      - "--certificatesresolvers.adventurousway-cloudflare.acme.storage=/letsencrypt/acme.json"
    labels:
      traefik.enable: "true"
      traefik.http.routers.http-catchall.rule: ClientIP(`{{ wireguard_vpn_network }}`)
      traefik.http.routers.http-catchall.entrypoints: http
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.routers.dashboard.rule: "Host(`traefik.{{ domain }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`) || Path(`/`))"
      traefik.http.routers.dashboard.service: "api@internal"
      traefik.http.routers.dashboard.middlewares: "dashboard-root-redirect,append-trailing-slash"
      traefik.http.routers.dashboard.entrypoints: "https"
      traefik.http.middlewares.append-trailing-slash.redirectregex.regex: ^(https?://[^/]+/dashboard)$$
      traefik.http.middlewares.append-trailing-slash.redirectregex.replacement: $${1}/
      traefik.http.middlewares.append-trailing-slash.redirectregex.permanent: true
      traefik.http.middlewares.dashboard-root-redirect.redirectregex.regex: ^(https?://[^/]+/)$$
      traefik.http.middlewares.dashboard-root-redirect.redirectregex.replacement: $${1}dashboard/
      traefik.http.middlewares.dashboard-root-redirect.redirectregex.permanent: true
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.redirect-to-https.redirectscheme.permanent: true
      traefik.http.middlewares.vpn-ipwhitelist.ipwhitelist.sourcerange: "{{ wireguard_vpn_network }}"
    environment:
      CF_API_EMAIL: "{{ cloudflare_email_address }}"
      CF_API_KEY: "{{ cloudflare_api_key }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ data_path }}/traefik:/letsencrypt"
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    dns: 1.1.1.1
    networks:
      - default
      - proxy

  cloudflare-tunnel:
    image: cloudflare/cloudflared:2021.12.4
    restart: unless-stopped
    container_name: cloudflare-tunnel
    command:
      - tunnel
      - run
    volumes:
      - "{{ data_path }}/cloudflare-tunnel:/etc/cloudflared:ro"
    networks:
      - default
