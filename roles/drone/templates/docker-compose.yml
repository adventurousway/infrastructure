# {{ ansible_managed | comment(decoration="# ") }}
---
version: "2.4"

networks:
  default:
  proxy:
    external: true

services:
  drone:
    image: drone/drone:2
    restart: unless-stopped
    container_name: drone
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.drone.rule: "Host(`drone.{{ domain }}`)"
      traefik.http.routers.drone.entrypoints: "https"
      traefik.http.routers.drone.middlewares: "vpn-ipwhitelist"
      traefik.http.routers.drone-webhook.rule: "Host(`drone-webhook.{{ domain }}`) && PathPrefix(`/hook`)"
      traefik.http.routers.drone-webhook.entrypoints: "https"
      traefik.http.services.drone.loadbalancer.server.port: "80"
    environment:
      DRONE_GITHUB_CLIENT_ID: "{{ drone_github_client_id }}"
      DRONE_GITHUB_CLIENT_SECRET: "{{ drone_github_secret }}"
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
      DRONE_SERVER_HOST: "drone.{{ domain }}"
      DRONE_SERVER_PROTO: https
    volumes:
      - "{{ data_path }}/drone:/data"
    networks:
      - default
      - proxy

  drone-runner:
    image: drone/drone-runner-docker:1
    restart: unless-stopped
    container_name: drone-runner
    environment:
      DRONE_RPC_HOST: drone
      DRONE_RPC_PROTO: http
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - default
