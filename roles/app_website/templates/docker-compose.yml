{{ ansible_managed | comment(decoration="# ") }}
---
version: "2.4"

networks:
  default:
  data:
    external: true
  proxy:
    external: true
  services:
    external: true
  smtp:
    external: true

services:
  api:
    image: "registry.{{ domain }}/adventurousway/api:{{ website_versions.api }}"
    restart: unless-stopped
    container_name: api
    environment:
      JWT_COOKIE_DOMAIN: "{{ domain }}"
      JWT_COOKIE_SECURE: "true"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.api.rule: "Host(`api.{{ domain }}`)"
      traefik.http.routers.api.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.api-graphql.rule: "(Host(`www.{{ domain }}`) || Host(`staging.{{ domain }}`)) && Path(`/graphql`)"
      traefik.http.routers.api-graphql.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.api-web.rule: "(Host(`www.{{ domain }}`) || Host(`staging.{{ domain }}`)) && (Path(`/atom`) || Path(`/feed`) || Path(`/json`)  || PathPrefix(`/pinterest`) || Path(`/sitemap.xml`))"
      traefik.http.routers.api-web.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.api-web.middlewares: "api-sitemap"
      traefik.http.middlewares.api-sitemap.replacepathregex.regex: "^/sitemap\\.xml"
      traefik.http.middlewares.api-sitemap.replacepathregex.replacement: "/sitemap"
      traefik.http.services.api.loadbalancer.server.port: "80"
    volumes:
      - "{{ secrets_path }}/image_service_uri:/run/secrets/image_service_uri:ro"
      - "{{ secrets_path }}/search_service_uri:/run/secrets/search_service_uri:ro"
      - "{{ secrets_path }}/video_service_uri:/run/secrets/video_service_uri:ro"
      - "{{ secrets_path }}/jwt_secret:/run/secrets/jwt_secret:ro"
      - "{{ secrets_path }}/mongodb_uri:/run/secrets/mongodb_uri:ro"
      - "{{ secrets_path }}/mysql_ghost_uri:/run/secrets/mysql_ghost_uri:ro"
      - "{{ secrets_path }}/smtp_uri:/run/secrets/smtp_uri:ro"
    networks:
      - proxy
      - services
      - data
      - smtp
      - default

  spider:
    image: "registry.{{ domain }}/adventurousway/spider:{{ website_versions.spider }}"
    restart: unless-stopped
    container_name: spider
    environment:
      CACHE_REFRESH_SECRET_KEY: "{{ website_cache_refresh_secret_key }}"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.spider.rule: "Host(`www.{{ domain }}`) && PathPrefix(`{{ website_cache_refresh_webook_path }}`)"
      traefik.http.routers.spider.entrypoints: "cloudflare-tunnel"
      traefik.http.services.spider.loadbalancer.server.port: "80"
    volumes:
      - "{{ data_path }}/config/spider.yml:/usr/src/config.yaml:ro"
    networks:
      - proxy

  web:
    image: "registry.{{ domain }}/adventurousway/web:{{ website_versions.web }}"
    restart: unless-stopped
    container_name: web
    environment:
      ENVIRONMENT: production
      CACHE_REFRESH_URL: https://www.{{ domain }}{{ website_cache_refresh_webook_path }}
      CACHE_REFRESH_SECRET_KEY: "{{ website_cache_refresh_secret_key }}"
      CSP_MODE: "off"
      REDIS_URL: redis://redis
      BASE_URL: https://www.{{ domain }}
      GRAPHQL_API_URL: https://www.{{ domain }}/graphql
      GRAPHQL_API_URL_SSR: http://api/graphql
      IMAGE_BASE_URL: https://www.{{ domain }}/images/
      GOOGLE_MAPS_EMBEDDED_API_KEY: "{{ google_maps_embedded_api_key }}"
      GOOGLE_MAPS_IFRAME_API_KEY: "{{ google_maps_iframe_api_key }}"
      ADS_ENABLED: "false"
      ANALYTICS_ENABLED: "true"
      SERVICE_WORKER_ENABLED: "true"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.web.rule: "Host(`www.{{ domain }}`)"
      traefik.http.routers.web.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.root.rule: "Host(`{{ domain }}`)"
      traefik.http.routers.root.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.root.middlewares: "root-to-www"
      traefik.http.middlewares.root-to-www.redirectregex.regex: "^http://{{ domain }}/(.*)"
      traefik.http.middlewares.root-to-www.redirectregex.replacement: "https://www.{{ domain }}/$${1}"
      traefik.http.middlewares.root-to-www.redirectregex.permanent: "true"
      traefik.http.services.web.loadbalancer.server.port: "80"
    networks:
      - proxy
      - data
      - default

  staging:
    image: "registry.{{ domain }}/adventurousway/web:{{ website_versions.staging }}"
    restart: unless-stopped
    container_name: staging
    environment:
      ENVIRONMENT: staging
      CACHE_REFRESH_URL: https://www.{{ domain }}{{ website_cache_refresh_webook_path }}
      CACHE_REFRESH_SECRET_KEY: "{{ website_cache_refresh_secret_key }}"
      CSP_MODE: "off"
      REDIS_URL: redis://redis
      BASE_URL: https://staging.{{ domain }}
      GRAPHQL_API_URL: https://staging.{{ domain }}/graphql
      GRAPHQL_API_URL_SSR: http://api/graphql
      IMAGE_BASE_URL: https://staging.{{ domain }}/images/
      GOOGLE_MAPS_EMBEDDED_API_KEY: "{{ google_maps_embedded_api_key }}"
      GOOGLE_MAPS_IFRAME_API_KEY: "{{ google_maps_iframe_api_key }}"
      ADS_ENABLED: "false"
      ANALYTICS_ENABLED: "false"
      SERVICE_WORKER_ENABLED: "true"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.staging.rule: "Host(`staging.{{ domain }}`)"
      traefik.http.routers.staging.entrypoints: "cloudflare-tunnel"
      traefik.http.services.staging.loadbalancer.server.port: "80"
    networks:
      - proxy
      - data
      - default

  image:
    image: "registry.{{ domain }}/adventurousway/image-service:{{ website_versions.image }}"
    restart: unless-stopped
    container_name: image
    environment:
      CACHE_S3_ACCESS_KEY_ID: "{{ website_cache_s3_access_key_id }}"
      CACHE_S3_BUCKET: "{{ website_cache_s3_bucket }}"
      CACHE_S3_ENDPOINT: "{{ website_cache_s3_endpoint }}"
      GHOST_S3_ACCESS_KEY_ID: "{{ website_ghost_s3_access_key_id }}"
      GHOST_S3_BUCKET: "{{ website_ghost_s3_bucket }}"
      GHOST_S3_ENDPOINT: "{{ website_ghost_s3_endpoint }}"
      STATIC_BASE_URL: "https://assets.{{ domain }}"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.image.rule: "(Host(`assets.{{ domain }}`) || Host(`staging.{{ domain }}`) || Host(`www.{{ domain }}`)) && PathPrefix(`/images/`)"
      traefik.http.routers.image.entrypoints: "cloudflare-tunnel"
      traefik.http.routers.image.middlewares: "blog-images,cors"
      traefik.http.routers.image.service: "image"
      traefik.http.services.image.loadbalancer.server.port: "80"
      traefik.http.middlewares.blog-images.replacepathregex.regex: "^/images/i/(.*)"
      traefik.http.middlewares.blog-images.replacepathregex.replacement: "/images/blog/$$1"
      traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist: "*"
    volumes:
      - "{{ secrets_path }}/cache_s3_secret_access_key:/run/secrets/cache_s3_secret_access_key:ro"
      - "{{ secrets_path }}/dynamic_image_title_secret:/run/secrets/dynamic_image_title_secret:ro"
      - "{{ secrets_path }}/ghost_s3_secret_access_key:/run/secrets/ghost_s3_secret_access_key:ro"
      - "{{ secrets_path }}/mysql_image_uri:/run/secrets/mysql_image_uri:ro"
    networks:
      - proxy
      - services
      - data

  image_cron:
    image: "registry.{{ domain }}/adventurousway/image-service:{{ website_versions.image }}"
    restart: "no"
    container_name: image_cron
    command:
      - "npm"
      - "run"
      - "precache"
    environment:
      CACHE_S3_ACCESS_KEY_ID: "{{ website_cache_s3_access_key_id }}"
      CACHE_S3_BUCKET: "{{ website_cache_s3_bucket }}"
      CACHE_S3_ENDPOINT: "{{ website_cache_s3_endpoint }}"
      GHOST_S3_ACCESS_KEY_ID: "{{ website_ghost_s3_access_key_id }}"
      GHOST_S3_BUCKET: "{{ website_ghost_s3_bucket }}"
      GHOST_S3_ENDPOINT: "{{ website_ghost_s3_endpoint }}"
      STATIC_BASE_URL: "https://assets.{{ domain }}"
    volumes:
      - "{{ secrets_path }}/cache_s3_secret_access_key:/run/secrets/cache_s3_secret_access_key:ro"
      - "{{ secrets_path }}/dynamic_image_title_secret:/run/secrets/dynamic_image_title_secret:ro"
      - "{{ secrets_path }}/ghost_s3_secret_access_key:/run/secrets/ghost_s3_secret_access_key:ro"
      - "{{ secrets_path }}/mysql_image_uri:/run/secrets/mysql_image_uri:ro"
    networks:
      - services
      - data

  search:
    image: "registry.{{ domain }}/adventurousway/search-service:{{ website_versions.search }}"
    restart: unless-stopped
    container_name: search
    environment:
      ENABLE_INGESTORS: "true"
      INGESTOR_SCHEDULE_POST: "* * * * *"
      ENABLE_API: "true"
    volumes:
      - "{{ secrets_path }}/mongodb_search_uri:/run/secrets/mongodb_search_uri:ro"
      - "{{ secrets_path }}/mysql_ghost_uri:/run/secrets/mysql_ghost_uri:ro"
    networks:
      - services
      - data

  video:
    image: "registry.{{ domain }}/adventurousway/video-service:{{ website_versions.video }}"
    restart: unless-stopped
    container_name: video
    environment:
      ENABLE_INGESTOR: "true"
      ENABLE_API: "true"
      YOUTUBE_CHANNEL_ID: "{{ website_youtube_channel_id }}"
    volumes:
      - "{{ secrets_path }}/mysql_video_uri:/run/secrets/mysql_video_uri:ro"
      - "{{ secrets_path }}/youtube_client_id:/run/secrets/youtube_client_id:ro"
      - "{{ secrets_path }}/youtube_client_secret:/run/secrets/youtube_client_secret:ro"
      - "{{ secrets_path }}/youtube_oauth_token:/run/secrets/youtube_oauth_token:ro"
    networks:
      - services
      - data
